<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans          
    http://www.springframework.org/schema/beans/spring-beans.xsd          
    http://www.springframework.org/schema/security          
    http://www.springframework.org/schema/security/spring-security.xsd">
<!-- 放行某些不需要拦截的请求 -->
<security:http security="none" pattern="/login.jsp"></security:http>    
<security:http security="none" pattern="/error.jsp"></security:http>  
<security:http security="none" pattern="/css/**"></security:http>    
<security:http security="none" pattern="/img/**"></security:http>  
<security:http security="none" pattern="/pages/**"></security:http>    
<security:http security="none" pattern="/plugins/**"></security:http>    
    
<!-- 针对请求做配置
   auto-config 表示使用框架提供的默认配置
   use-expressions 使用spel表达式 hasRole('ROLE_USER')
 -->
<security:http auto-config="true" use-expressions="true">
     <!-- 配置拦截的请求路径 请求的用户必须拥有ROLE_USER的角色才可以访问
     access="ROLE_USER,ROLE_ADMIN" or 或者的关系  登录的用户拥有其中一种角色即可
     use-expressions="true" 代表使用spel表达式 hasRole('ROLE_USER')
     hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')
      -->
	<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_PRODUCT','ROLE_ORDER')"/>
	<!-- 配置自定义的登陆信息
	 login-page 指定自定义的登陆页面
	 login-processing-url 登陆请求的url路径
	 default-target-url 默认登陆成功页面
	 authentication-failure-url 登陆失败的显示页面
	 -->
	<security:form-login login-page="/login.jsp"
	                     login-processing-url="/login"
	                     default-target-url="/index.jsp"
	                     authentication-failure-url="/error.jsp"
	                     />
	 <!-- csrf跨域攻击拦截指定不可用  -->
	<security:csrf disabled="true"/>
	<!-- 成功登陆权限不足的处理 -->
	<security:access-denied-handler error-page="/403.jsp"/>
	<!-- 退出的配置
	    logout-url 请求退出的访问url路径
	    logout-success-url 成功退出后的访问路径
	    invalidate-session="true" 退出后销毁session
	 -->
	<security:logout logout-url="/logout" logout-success-url="/login.jsp" invalidate-session="true"/>
</security:http>

<!-- 认证和权限的管理配置  -->
<security:authentication-manager>
	<!-- 认证权力的提供支持者 -->
	<security:authentication-provider user-service-ref="sysUserService">
		<!-- 固定声明用户 一个user 一个admin 并且初始化拥有的权限测试 noop代表密码是明文验证 -->
			<!-- 通过数据库查询得到用户验证 -->
			
	<!-- 指定当前使用的加密方式 -->
	<security:password-encoder  hash="bcrypt"></security:password-encoder>
	</security:authentication-provider>
	
</security:authentication-manager>

<!-- 配置使用密码加密的工具类对象 -->
 <bean id="passWordencoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>



</beans>
